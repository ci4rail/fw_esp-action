name: ESP32 Secure App Workflow

permissions:
  id-token: write # required for OIDC
  contents: read

on:
  workflow_call:
    inputs:
      firmware_signing_azure_subscription_id:
        required: true
        type: string
      firmware_signing_azure_tenant_id:
        required: true
        type: string
      firmware_signing_azure_dev_app_id:
        required: true
        type: string
      firmware_signing_azure_dev_key_id:
        description: "ID for the development key used for signing firmware. e.g. https://firmware-key-test.vault.azure.net/keys/ci4rail-sio06-00-g0"
        required: true
        type: string
      firmware_signing_azure_prod_app_id:
        required: true
        type: string
      firmware_signing_azure_prod_key_id:
        description: "ID for the production key used for signing firmware. e.g. https://vault-firmware-signing.vault.azure.net/keys/ci4rail-sio06-00-g0"
        required: true
        type: string
      build-dfu:
        description: "Whether to build dfu binary"
        required: false
        type: boolean
        default: false
      teststation-broker:
        description: "IP:Port of MQTT broker where test station listens to"
        type: string
        required: true
      teststation-master-topic:
        description: "teststation request is published to <master-topic>/request"
        required: false
        type: string
        default: "teststation"
      teststation-request-timeout:
        description: "Time in seconds to wait for teststation to become available"
        required: false
        type: number
        default: 3600
      test-name:
        description: |
          Name of the test to execute (must match an entry in the test schedulers config file)
          If empty, skip test execution
        type: string
        required: true
      test-device-name:
        description: "Device id as listed in test schedulers config file to run the test on test station"
        type: string
        required: true
      
    secrets:
      access-token:
        description: "Personal access token for private repos"
        required: true
      tailscale-key:
        description: "a reusable tailscale key"
        required: true
      minio-access-key:
        description: "Access key for minio"
        required: true
      minio-secret-key:
        description: "Secret key for minio"
        required: true

jobs:
  build:
    runs-on: [self-hosted, linux, x64]

    outputs:
      project-name: ${{ steps.build_app.outputs.project-name }}
      version: ${{ steps.build_app.outputs.version }}
      app-file: ${{ steps.build_app.outputs.app-file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          token: ${{ secrets.access-token }}

      - name: Get builder image
        id: get_builder
        uses: ci4rail/fw_esp-action/actions/get_builder_image@v10

      - name: Build App
        id: build_app
        uses: ci4rail/fw_esp-action/actions/build_app@v10        
        with:
          devcontainer-image: ${{ steps.get_builder.outputs.builder-image }}
          app-build-command: make build-secure
          build-dfu: ${{ inputs.build-dfu }}

      - name: Generate signature for development
        id: sign_app_dev
        uses: ci4rail/fw_esp-action/actions/azure_key_vault_sign@v10
        with:
          binary: ${{ steps.build_app.outputs.app-file-path }}
          signature-suffix: -dev
          azure_subscription_id: ${{ inputs.firmware_signing_azure_subscription_id }}
          azure_tenant_id: ${{ inputs.firmware_signing_azure_tenant_id }}
          azure_app_id: ${{ inputs.firmware_signing_azure_dev_app_id }}
          key_id_base: ${{ inputs.firmware_signing_azure_dev_key_id }}
          num_keys: 1

      - name: Generate signature for production
        id: sign_app_prod
        uses: ci4rail/fw_esp-action/actions/azure_key_vault_sign@v10
        with:
          binary: ${{ steps.build_app.outputs.app-file-path }}
          azure_subscription_id: ${{ inputs.firmware_signing_azure_subscription_id }}
          azure_tenant_id: ${{ inputs.firmware_signing_azure_tenant_id }}
          azure_app_id: ${{ inputs.firmware_signing_azure_prod_app_id }}
          key_id_base: ${{ inputs.firmware_signing_azure_prod_key_id }}
          num_keys: 1

      - shell: bash
        run: |
          ls -lR build*