name: ESP32 Secure Bootloader Workflow

on:
  workflow_call:
    inputs:
      firmware_signing_azure_subscription_id:
        required: true
        type: string
      firmware_signing_azure_tenant_id:
        required: true
        type: string

jobs:
  build:
    runs-on: [self-hosted, linux, x64]

    outputs:
      project-name: ${{ steps.build_bootloader.outputs.project-name }}
      version: ${{ steps.build_bootloader.outputs.version }}
      bootloader-file: ${{ steps.build_bootloader.outputs.bootloader-file }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start esp-idf Devcontainer
        uses: ci4rail/fw_esp-action/actions/setup_devcontainer@v10

      - name: Build Bootloader
        id: build_bootloader
        uses: ci4rail/fw_esp-action/actions/build_bootloader@v10

      - name: Upload build outputs to artifact storage
        uses: actions/upload-artifact@v4
        with:
          name: build_output
          path: |
            ${{ steps.build_bootloader.outputs.bootloader-file-path }}
            ${{ steps.build_bootloader.outputs.build-dir }}/flash_bootloader_args

      - name: tear down devcontainer
        if: ${{ always() }}
        uses: ci4rail/fw_esp-action/actions/teardown_devcontainer@v10


  sign:
    needs: build
    permissions:
      id-token: write # required for OIDC
      contents: read
    runs-on: [self-hosted, linux, x64]
    strategy:
      matrix:
        env:
          - name: staging
          - name: production
    environment: ${{ matrix.env.name }}
    steps:
      # we need to checkout repo, as we need devcontainer.json
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start esp-idf Devcontainer
        uses: ci4rail/fw_esp-action/actions/setup_devcontainer@v10

      - uses: actions/download-artifact@v4
        with:
          name: build_output
          path: in/

      - name: Generate signature
        id: gen_signature
        uses: ci4rail/fw_esp-action/actions/azure_key_vault_sign@v10
        with:
          binary: in/${{ needs.build.outputs.bootloader-file }}
          azure_subscription_id: ${{ inputs.firmware_signing_azure_subscription_id }}
          azure_tenant_id: ${{ inputs.firmware_signing_azure_tenant_id }}
          azure_app_id: ${{ vars.FIRMWARE_SIGNING_AZURE_APP_ID }}
          key_ids: ${{ vars.FIRMWARE_SIGNING_AZURE_KEY_IDS }}

      - name: Sign image with espsecure 
        id: sign
        uses: ci4rail/fw_esp-action/actions/esp_sign@v10
        with:
          binary: in/${{ needs.build.outputs.bootloader-file }}

      - name: rename bootloader binary according to environment
        id: rename
        run: |
          # rename xxx.bin -> xxx-${matrix.env.name}.bin
          base=$(basename ${{ steps.sign.outputs.signed-binary-path }})
          newname=${base%.*}-${{ matrix.env.name }}.bin
          mv ${{ steps.sign.outputs.signed-binary-path }} in/${newname}
          echo "newname=in/${newname}" >> $GITHUB_OUTPUT

      - name: Upload signed bootloader to artifact storage
        uses: actions/upload-artifact@v4
        with:
          name: bootloader-${{ matrix.env.name }}
          path: |
            ${{ steps.rename.outputs.newname }}
          retention-days: 2

      - name: tear down devcontainer
        if: ${{ always() }}
        uses: ci4rail/fw_esp-action/actions/teardown_devcontainer@v10

  release:
    needs: [build, sign]
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - name: Download flash args
        uses: actions/download-artifact@v4
        with:
          name: build_output
          path: ./add-ons

      - name: Download bootloader binarys
        uses: actions/download-artifact@v4
        with:
          pattern: bootloader-*
          path: ./artifacts
          merge-multiple: true

      - shell: bash
        run: ls -l artifacts

      - name: Create Release in this Repo
        uses: ci4rail/fw_esp-action/actions/release@v10
        with:
          assets: |
            artifacts/*
            add-ons/flash_bootloader_args
          target_commitish: main
