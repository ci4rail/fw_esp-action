name: "Sign ESP Binary"
description: |
  Sign a ESP binary (bootloader or app) using Azure Key Vault. 
  After signing, the signed binary is copied over the input binary.
  For convinience the path of the signed binary is also available as output.
  If <num_keys> is greater than 1, the output will have multiple signatures appended, 
  one for each key.
inputs:
  binary:
    description: "The binary file (with path) to sign."
    required: true
  azure_subscription_id:
    description: "The Azure subscription ID."
    required: true
  azure_tenant_id:
    description: "The Azure tenant ID."
    required: true
  azure_app_id:
    description: "The Azure app ID that has access to vault signing keys"
    required: true
  key_id_base:
    description: "The base ID for the key used for signing firmware. e.g. https://firmware-key-test.vault.azure.net/keys/ci4rail-sio06-00-g"
    required: true
  num_keys:
    description: |
      The number of signing keys to use (at least 1). 
      The key_id_base will be postfixed with 0, 1, ..., N, if num_keys > 1
    required: true

runs:
  using: "composite"
  steps:
    # self-hosted runner currently doesn't have az cli installed...
    - name: Install AZ CLI
      shell: bash
      run: |
        if ! command -v az &> /dev/null; then
            echo "Azure CLI not found. Installing..." >&2
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        else
            echo "Azure CLI is already installed." >&2
        fi

    - name: Azure OIDC login
      uses: azure/login@v2
      with:
        client-id: ${{ inputs.azure_app_id }}
        tenant-id: ${{ inputs.azure_tenant_id }}
        subscription-id: ${{ inputs.azure_subscription_id }}


    - name: Sign digest with Key Vault
      id: sign
      shell: bash
      run: |
        ${{ github.action_path }}/gen-signatures.sh "${{ inputs.binary }}" "${{ inputs.num_keys }}"  "${{ inputs.key_id_base }}"
        runuser -u hostusr -- bash -lc '${{ github.action_path }}/sign.sh "${{ inputs.binary }}" "${{ inputs.num_keys }}"  "${{ inputs.key_id_base }}"'

outputs:
  signed_binary_path:
    description: "Path to the signed binary"
    value: ${{ steps.sign.outputs.signed_binary_path }}